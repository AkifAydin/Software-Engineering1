buildscript {
    ext {
        springBootVersion = '2.3.4.RELEASE'
    }
    repositories {
        jcenter()
        maven { url "https://repo.spring.io/release" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.33.0"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

group = "com.haw.arne-busch"
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    maven { url "http://repo.spring.io/release" }
}

dependencies {
    implementation 'javax.xml.bind:jaxb-api'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.json:json:20200518'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok:1.18.12'

    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'io.rest-assured:json-path:4.3.1'
    testImplementation 'io.rest-assured:spring-mock-mvc:4.3.1'
    testImplementation 'io.rest-assured:xml-path:4.3.1'
    testImplementation 'mysql:mysql-connector-java'
    testImplementation 'org.assertj:assertj-core:3.17.2'
    testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'

    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

test {
    useJUnitPlatform()
    failFast = false
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}
